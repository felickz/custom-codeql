# Use this configuration file when looking to get the broadest coverage of security results from the CodeQL Built in queries.
# A notable amount of false positives may be found in this configuration.  If you wish to reduce the number of false positives, use the default codeql suites :)
#2.15.0 - charp = 100 queries
name: "All CodeQL Built In Security Queries Config"

# expand thread model - https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/customizing-your-advanced-setup-for-code-scanning#extending-codeql-coverage-with-threat-models
threat-models: local

# start from scratch - https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/customizing-your-advanced-setup-for-code-scanning#disabling-the-default-queries
disable-default-queries: true

# We cant do this additively after the filters below have been applied, so this will not work to pull in security-experimental + additional queries
# queries: 
#   # Load all the experimental query suites (lightly documented: https://github.com/github/codeql/pull/11702)  
#   - name: "Built-In CodeQL Experimental Suites"
#     uses: security-experimental


packs:         
    # All cpp queries
    - codeql/cpp-queries:.
    # All Csharp queries (309)
    - codeql/csharp-queries:.
    # All go queries
    - codeql/go-queries:.
    # All java queries
    - codeql/java-queries:.
    # All javascript queries
    - codeql/javascript-queries:.
    # All python queries
    - codeql/python-queries:.
    # All ruby queries
    - codeql/ruby-queries:.
    # All swift queries
    - codeql/swift-queries:.

query-filters:

# Start with Security Experimental (lightly documented: https://github.com/github/codeql/pull/11702) : https://github.com/github/codeql/blob/main/misc/suite-helpers/security-experimental-selectors.yml
# - precision ( low + Low or EXCLUDED precision)
# + problem.severity: recommendation
# - restriction of no experimental folder
- include:
    kind:
    - problem
    - path-problem
    precision:
    - high
    - very-high
    tags contain:
    - security
- include:
    kind:
    - problem
    - path-problem
    # REMOVE precision (Support NO or low/Low precision)
    # precision:
    # - medium  
    # - low
    # - Low
    problem.severity:
    - error
    - warning
    # ADD recommendation
    - recommendation
    tags contain:
    - security
- include:
    kind:
    - diagnostic
- include:
    kind:
    - metric
    tags contain:
    - summary
- exclude:
    deprecated: //
- exclude:
    query path:
      # REMOVE exclude - OK even if they exist in experimental folder
      #- /^experimental\/.*/
      - Metrics/Summaries/FrameworkCoverage.ql
      - /Diagnostics/Internal/.*/
- exclude:
    tags contain:
      - modeleditor
      - modelgenerator
# Exclude audit queries from the CodeQL Built in packs
- exclude:
    id:
    - cpp/untrusted-data-to-external-api
    - cs/untrusted-data-to-external-api
    - go/untrusted-data-to-external-api
    - java/untrusted-data-to-external-api
    - js/untrusted-data-to-external-api
    - py/untrusted-data-to-external-api